- name: Download kitty
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  uri:
    url: 'https://sw.kovidgoyal.net/kitty/installer.sh'
    method: GET
    dest: /tmp/kitty-installer.sh
    mode: 'u+rwx'
    status_code:
      - 200
      - 304
  register: kitty_download
  tags:
    - install
    - update
    - kitty

- name: Check if ~/.local/kitty.app folder already exists
  stat:
    path: "{{ dotfiles_user_home }}/.local/kitty.app"
  register: kitty_installation_folder
  tags:
    - install
    - update
    - kitty

- name: Remove current installation folder
  when: kitty_download.status == 200 and kitty_installation_folder.stat.exists
  file:
    path: "{{ dotfiles_user_home }}/.local/kitty.app"
    state: absent
  tags:
    - install
    - update
    - kitty

- name: Install downloaded version
  when: kitty_download.status == 200
  ansible.builtin.shell: /tmp/kitty-installer.sh launch=n
  tags:
    - install
    - update
    - kitty

- name: Remove kitty-installer.sh
  file:
    path: /tmp/kitty-installer.sh
    state: absent

- name: Create symbolic links to add kitty to PATH
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_user_home }}/.local/kitty.app/bin/kitty"
    dest: "{{ dotfiles_user_home }}/.local/bin/kitty"
    state: link
  tags:
    - install
    - kitty

- name: Create symbolic links to add kitten to PATH
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_user_home }}/.local/kitty.app/bin/kitten"
    dest: "{{ dotfiles_user_home }}/.local/bin/kitten"
    state: link
  tags:
    - install
    - kitty

- name: Place the kitty.desktop file where it can be found by the OS
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  copy:
    src: "{{ dotfiles_user_home }}/.local/kitty.app/share/applications/kitty.desktop"
    dest: "{{ dotfiles_user_home }}/.local/share/applications/kitty.desktop"
  tags:
    - install
    - kitty

- name: Add kitty-open.desktop too to open files and images via file manager
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  copy:
    src: "{{ dotfiles_user_home }}/.local/kitty.app/share/applications/kitty-open.desktop"
    dest: "{{ dotfiles_user_home }}/.local/share/applications/kitty-open.desktop"
  tags:
    - install
    - kitty

- name: Update the paths to the kitty and its icon in the kitty.desktop file(s)
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  shell: sed -i "s|Icon=kitty|Icon=/home/$USER/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop && sed -i "s|Exec=kitty|Exec=/home/$USER/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
  tags:
    - install
    - kitty

- name: Symlink configurations
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_home }}/roles/kitty/files/kitty.conf"
    dest: "{{ dotfiles_user_home }}/.config/kitty/kitty.conf"
    state: link
  tags:
    - install
    - kitty

- name: Symlink background
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_home }}/roles/kitty/files/background.png"
    dest: "{{ dotfiles_user_home }}/.config/kitty/background.png"
    state: link
  tags:
    - install
    - kitty

- name: Symlink gruvbox theme
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_home }}/roles/kitty/files/gruvbox_dark.conf"
    dest: "{{ dotfiles_user_home }}/.config/kitty/gruvbox_dark.conf"
    state: link
  tags:
    - install
    - kitty

- name: Symlink catppuccin theme
  when: ansible_os_family == "Archlinux" or ansible_os_family == "Debian"
  file:
    src: "{{ dotfiles_home }}/roles/kitty/files/catppuccin_macchiato.conf"
    dest: "{{ dotfiles_user_home }}/.config/kitty/catppuccin_macchiato.conf"
    state: link
  tags:
    - install
    - kitty
