- name: Add additional apt gpg keys and sources
  when: ansible_os_family == "Debian"
  become: true
  block:
    - name: Docker apt key and repository
      shell: >
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc | \
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: NVIDIA Container Toolkit apt key and repository
      shell: >
        curl -sS https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor --yes -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg | \
        echo "deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://nvidia.github.io/libnvidia-container/stable/deb/$(ARCH)"

    - name: Spotify apt key and repository
      shell: >
        curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg | \
        echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list

    - name: VSCode apt key and repository
      shell: >
        curl -sS https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor --yes -o /etc/apt/keyrings/packages.microsoft.gpg | \
        echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null

    - name: Kubectl apt key and repository
      shell: >
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor --yes -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg | \
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Lens apt key and repository
      shell: >
        curl -fsSL https://downloads.k8slens.dev/keys/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/lens-archive-keyring.gpg > /dev/null & \
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/lens-archive-keyring.gpg] https://downloads.k8slens.dev/apt/debian stable main" | sudo tee /etc/apt/sources.list.d/lens.list > /dev/null
  tags:
    - install
    - core
    - apt

- name: Install system packages
  when: ansible_os_family == "Debian"
  become: true
  ansible.builtin.apt:
    name:
      - bat
      - code
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - fzf
      - fonts-noto
      - fonts-noto-color-emoji
      - git-delta
      - gnupg2
      - kubectl
      - lens
      - libnss3-tools
      - libsecret-1-0
      - libsecret-1-dev
      - libsecret-tools
      - nvidia-container-toolkit
      - papirus-icon-theme
      - ripgrep
      - spotify-client
      - spotify-client-gnome-support
      - xclip
      - wmctrl
    state: present
    update_cache: yes
  tags:
    - install
    - core
    - apt

# - name: Install system packages
#   when: ansible_os_family == "Debian"
#   become: true
#   ansible.builtin.shell: dconf load / < "{{ dotfiles_home }}/roles/core-setup/files/dconf-settings.ini"
#   tags:
#     - install
#     - gnome
#     - core

- name: Add Flathub repository
  when: ansible_distribution == "Pop!_OS"
  become: true
  ansible.builtin.shell: flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
  tags:
    - install
    - core

- name: Install common apps through Flatpak
  when: ansible_distribution == "Pop!_OS"
  community.general.flatpak:
    name:
      - com.bitwarden.desktop
      - com.discordapp.Discord
      - com.getpostman.Postman
      - com.slack.Slack
      - io.dbeaver.DBeaverCommunity
      - org.gimp.GIMP
      - org.signal.Signal
      - md.obsidian.Obsidian
  tags:
    - install
    - core

- name: Install Lazygit
  when: ansible_os_family == "Debian"
  become: true
  block:
    - name: Check if it's already installed
      stat:
        path: "/usr/local/bin/lazygit"
      register: lazygit_installed
    - name: Remove previous version
      when: lazygit_installed.stat.exists
      file:
        path: "/usr/local/bin/lazygit"
        state: absent
    - name: Install latest release version
      shell: >
        LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*') && \
        curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" && \
        tar xf lazygit.tar.gz lazygit && \
        sudo install lazygit /usr/local/bin && \
        rm -r lazygit
  tags:
    - install
    - update
    - core
    - lazygit

- name: Install Lazydocker
  when: ansible_os_family == "Debian"
  block:
    - name: Check if it's already installed
      stat:
        path: "{{ dotfiles_user_home }}/.local/bin/lazydocker"
      register: lazydocker_installed
    - name: Remove previous version
      when: lazydocker_installed.stat.exists
      file:
        path: "{{ dotfiles_user_home }}/.local/bin/lazydocker"
        state: absent
    - name: Install latest release version
      shell: >
        curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
  tags:
    - install
    - update
    - core
    - lazydocker

- name: Update all packages to their latest version
  when: ansible_os_family == "Debian"
  become: true
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: yes
  tags:
    - update
    - core
    - apt

- name: Update all Flatpak packages
  when: ansible_distribution == "Pop!_OS"
  become: true
  ansible.builtin.command: flatpak update --noninteractive
  register: flatpak_update_output
  changed_when: "'app/' in flatpak_update_output.stdout"
  tags:
    - update
    - core

- name: Install Google Chrome
  when: ansible_os_family == "Debian"
  block:
    - name: Install dependencies
      become: true
      ansible.builtin.apt:
        name:
          - libappindicator3-1
          - libgbm1
          - libindicator3-7
          - libu2f-udev
        state: present
        update_cache: yes
    - name: Install using apt
      become: true
      ansible.builtin.apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  tags:
    - install
    - update
    - core

- name: Install Layan cursor
  when: ansible_os_family == "Debian"
  block:
  - name: Clone repo
    git:
      repo: https://github.com/vinceliuice/Layan-cursors.git
      dest: "{{ dotfiles_user_home }}/.layan-cursor"
    register: layan_cursor_repo_clone
  - name: Run install script
    when: layan_cursor_repo_clone.changed
    become: true
    ansible.builtin.shell: ./install.sh
    args:
      chdir: "{{ dotfiles_user_home }}/.layan-cursor"
  tags:
    - install
    - update
    - core
